<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	
		<context:annotation-config />
		<context:component-scan base-package="com.dev.old.aop" />
		<context:component-scan base-package="com.dev.aspect.aspectj"/>
		<!-- 面向切面编程开发步骤(动态织入)
		1、确定目标对象（target—>bean）
		2、编写Advice通知方法 （增强代码）
		3、配置切入点和切面  -->
		<!-- 确定目标对象 -->
		<!-- <bean id="customerService" class="com.dev.old.aop.ICustomerService" >
			<property name="customerService" ref="customerServiceImpl"></property>
		</bean> -->
		
		<!-- 传统Spring AOP切面编程  -->
		<bean id="customerService" class="com.dev.old.aop.CustomerServiceImpl"></bean>
		<bean id="productService" class="com.dev.old.aop.ProductService"></bean>
		<bean id="timeLogIntercept" class="com.dev.old.aop.TimeLogIntercept"></bean>
		<!-- 配置切入点和切面 -->
		<aop:config>
			<aop:pointcut expression="bean(*Service*)" id="mypointcut"/>
			<aop:advisor advice-ref="timeLogIntercept" pointcut-ref="mypointcut"/>
		</aop:config>
		
		<!-- AspectJ切面编程  -->
		<bean id="userService" class="com.dev.aspect.aspectj.UserServiceImpl"></bean>
		<bean id="bookService" class="com.dev.aspect.aspectj.BookService"></bean>
		
		<!-- 切入点:拦截哪些bean的方法 -->
		<bean id="aspectAdvice" class="com.dev.aspect.aspectj.MyAspectJ"></bean>
		<aop:config>
			<aop:pointcut expression="bean(*Service*)" id="aspectpointcut"/>
				<!--
					切面：要对哪些方法进行怎样的增强  
					aop:aspect:aspejctj的方式！
					ref:配置通知
				-->
			<aop:aspect ref="aspectAdvice">
				<!-- 第一个前置通知 ：在访问目标对象方法之前，先执行通知的方法
					method：advice类中的方法名，
	                pointcut-ref="myPointcut"：注入切入点
	               	 目的是让通知关联切入点
				-->
				<aop:before  method="before"  pointcut-ref="aspectpointcut"/>
			</aop:aspect>
		</aop:config>

</beans>