<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context" 
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"> 
        
    <bean id="userService" class="com.dev.aspect.apply.UserServiceImpl"/>
	<bean id="bookService" class="com.dev.aspect.apply.BookService"/>
	<bean id="checkFee" class="com.dev.aspect.apply.CheckFee"/>
	
	<!-- 配置aspect -->
	<bean id="myAdvice" class="com.dev.aspect.apply.MyAdvice"/>
	
	
	<aop:config>
		<aop:pointcut expression="bean(*Service)" id="mypointcut"/>
		<!-- 前置通知 -->
		 <!--<aop:aspect ref="myAdvice">
			<aop:before method="before" pointcut-ref="mypointcut"/>
		</aop:aspect>-->
		
		<!-- 后置通知 -->
		<aop:aspect ref="myAdvice">
			<aop:after-returning method="afterReturn" pointcut="bean(checkFee)" returning="returnVal"/>
		</aop:aspect>
		
		<!-- 环绕通知 -->
		<!-- <aop:aspect ref="myAdvice">
			<aop:around method="around" pointcut-ref="mypointcut" />
		</aop:aspect> -->
		
		<!-- 异常通知 -->
		<!-- <aop:aspect ref="myAdvice">
			<aop:after-throwing method="afterThrowing" throwing="ex" pointcut-ref="mypointcut"/>
		</aop:aspect> -->
		
		<!-- 最终通知 -->
		<!-- <aop:aspect ref="myAdvice">
			<aop:after method="after" pointcut-ref="mypointcut"/>
		</aop:aspect> -->
	</aop:config>
	
</beans>