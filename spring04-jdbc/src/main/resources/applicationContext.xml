<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- bean definitions here -->
    <!-- 框架有内置数据源,传入参数即可 -->
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql:///springdata"/>
		<property name="username" value="root" />
		<property name="password" value="123" />
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean> -->
	
	<!-- 更换数据源对象为c3p0,导入包,
	注意区别两个数据源的成员属性名称不一致,需要调整 -->
	<bean id="c3p0" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="c3p0" />
	</bean>
	
	<!-- 优化第二步
	将参数放在properties文件中,用参数文件来解耦, 更加灵活, 在开发中,测试用本地数据库,所以上线也经常更换数据库 
	
	模拟需求：
	现在数据源的相关参数配置，是测试环境下的。
	现在，要将工程搭建在正式的服务器上，因为测试环境和正式环境的数据库肯定不是一个，所以肯定首先要更改数据源相关的配置。
	缺点：必须手动修改applicationContext.xml文件，容易造成误操作。
	解决方案：不修改。可以将数据源相关配置参数，外置。
	
	目的：可以将xml配置中可能要经常修改内容，抽取到一个properties文件 
	应用：使用properties文件配置参数，如数据库连接参数等。
	-->
	<context:property-placeholder location="classpath:db.properties"/>
	
</beans>